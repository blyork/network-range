/*! network-range - v0.1.0 - 2014-08-31
* https://github.com/blyork/network-range
* Copyright (c) 2014 Benjamin York; Licensed MIT */

!function(a,b){"use strict";"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():a.NetworkRange=b()}(this,function(){"use strict";function a(a,c){if(a=b.prototype.ipStringToInteger(a),c=b.prototype.ipStringToInteger(c),a>c)throw new RangeError("Start is after end.");this._start=a,this._end=c,this._current=a}function b(a,b){var c;if(b||(this.isShortRange(a)?(c=this.parseShortRange(a),b=this.calculateSmallestSubmask(c.start,c.end)):this.isLongRange(a)&&(c=this.parseLongRange(a),b=this.calculateSmallestSubmask(c.start,c.end))),this.isIp(a)&&this.isSubmask(b))this._ip=this.ipStringToInteger(a),this._submask=this.ipStringToInteger(b);else if(this.isCidr(a))c=this.parseCidr(a),this._ip=this.ipStringToInteger(c.ip),this._submask=this.ipStringToInteger(c.submask);else if(this.isShortRange(a)&&this.isSubmask(b)){if(c=this.parseShortRange(a),this._ip=this.ipStringToInteger(c.start),this._start=this._ip,this._end=this.ipStringToInteger(c.end),this._submask=this.ipStringToInteger(b),!this.contains(c.start,c.end))throw new RangeError("Invalid range/submask combination.")}else{if(!this.isLongRange(a)||!this.isSubmask(b))throw new Error("Invalid input.");if(c=this.parseLongRange(a),this._ip=this.ipStringToInteger(c.start),this._start=this._ip,this._end=this.ipStringToInteger(c.end),this._submask=this.ipStringToInteger(b),!this.contains(c.start,c.end))throw new RangeError("Invalid range/submask combination.")}}return a.prototype.next=function(){return this._current<=this._end?b.prototype.ipIntegerToString(this._current++):null},a.prototype.reset=function(){this._current=this._start},a.prototype.toArray=function(){var a,b;for(a=[];b=this.next();)a.push(b);return a},a.prototype.toString=function(){return JSON.stringify({current:b.prototype.ipIntegerToString(this._current),start:b.prototype.ipIntegerToString(this._start),end:b.prototype.ipIntegerToString(this._end)})},b.prototype._cidrRegex=/^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\/([1-2]?[0-9]|3[0-2])$/,b.prototype._ipRegex=/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,b.prototype._longRangeRegex=/^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))-((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$/,b.prototype._shortRangeRegex=/^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3})(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,b.prototype._submaskRegex=/^(?:255\.){3}(?:255|254|252|248|240|224|192|128|0)|(?:255\.){2}(?:254|252|248|240|224|192|128|0)\.0|255\.(?:254|252|248|240|224|192|128|0)(?:\.0){2}|(?:254|252|248|240|224|192|128)(?:\.0){3}$/,b.prototype._bitmaskStringToInteger=function(a){var b,c,d;if(a=parseInt(a,10),isNaN(a)||a>32)throw new Error("Invalid bitmask.");for(c=32-a,b=4294967295,d=0;c>d;d+=1)b^=1<<d;return b},b.prototype.bitAt=function(a,b){return 0!==(a&1<<b-1)?1:0},b.prototype.bitmaskToSubmask=function(a){return b.prototype.ipIntegerToString(b.prototype._bitmaskStringToInteger(a))},b.prototype.calculateSmallestSubmask=function(a,c){var d,e,f;for(a=b.prototype.ipStringToInteger(a),c=b.prototype.ipStringToInteger(c),d=32;d>=0;d-=1)if(b.prototype.bitAt(a,d)!==b.prototype.bitAt(c,d)){e=d;break}for(f=4294967295,d=0;e>d;d+=1)f^=1<<d;return b.prototype.ipIntegerToString(f)},b.prototype.getHexOctets=function(a){return a.split(":").map(function(a){return parseInt(a,16)})},b.prototype.getOctets=function(a){return a.split(".").map(function(a){return parseInt(a,10)})},b.prototype.ipIntegerToString=function(a){var b,c,d;for(b=[],c=0;4>c;c+=1)d=8*(3-c),b.push((a&255<<d)>>>d);return b.join(".")},b.prototype.ipStringToInteger=function(a){var c,d,e,f;if(!b.prototype.isIp(a))throw new Error("Invalid IP.");for(c=b.prototype.getOctets(a),d=0,e=0;4>e;e+=1)f=8*(3-e),d+=c[e]<<f;return d},b.prototype.isCidr=function(a){return b.prototype._cidrRegex.test(a)},b.prototype.isIp=function(a){return b.prototype._ipRegex.test(a)},b.prototype.isLongRange=function(a){return b.prototype._longRangeRegex.test(a)},b.prototype.isShortRange=function(a){return b.prototype._shortRangeRegex.test(a)},b.prototype.isSubmask=function(a){return b.prototype._submaskRegex.test(a)},b.prototype.parseCidr=function(a){var c,d;return c=null,d=b.prototype._cidrRegex.exec(a),d&&(c={ip:d[1],submask:b.prototype.bitmaskToSubmask(d[2])}),c},b.prototype.parseLongRange=function(a){var c,d,e,f,g;return c=null,d=b.prototype._longRangeRegex.exec(a),d&&(e=b.prototype.ipStringToInteger(d[1]),f=b.prototype.ipStringToInteger(d[2]),e>f&&(g=e,e=f,f=g),c={start:b.prototype.ipIntegerToString(e),end:b.prototype.ipIntegerToString(f)}),c},b.prototype.parseShortRange=function(a){var c,d,e,f,g;return c=null,d=b.prototype._shortRangeRegex.exec(a),d&&(e=b.prototype.ipStringToInteger(d[1]+d[2]),f=b.prototype.ipStringToInteger(d[1]+d[3]),e>f&&(g=e,e=f,f=g),c={start:b.prototype.ipIntegerToString(e),end:b.prototype.ipIntegerToString(f)}),c},b.prototype.submaskToBitmask=function(a){var c,d,e;for("string"==typeof a&&(a=b.prototype.ipStringToInteger(a)),c=0,d=32,e=1;1===e;d-=1)c+=e=b.prototype.bitAt(a,d);return c},b.prototype._calculateBitmask=function(){this._bitmask||(this._bitmask=b.prototype.submaskToBitmask(this._submask))},b.prototype._calculateBroadcast=function(){this._broadcast||(this._calculateNetwork(),this._calculateHost(),this._broadcast=this._network|this._host)},b.prototype._calculateEnd=function(){this._end||(this._calculateBroadcast(),this._end=this._broadcast-1)},b.prototype._calculateHost=function(){this._host||(this._host=4294967295^this._submask)},b.prototype._calculateNetwork=function(){this._network||(this._network=this._ip&this._submask)},b.prototype._calculateStart=function(){this._start||(this._calculateNetwork(),this._start=this._network+1)},b.prototype._contains=function(a){return this._calculateNetwork(),this._calculateStart(),this._calculateEnd(),a=this.ipStringToInteger(a),(a&this._submask)===this._network&&a>=this._start&&a<=this._end},b.prototype._containsRange=function(a,b){return this._contains(a)&&this._contains(b)},b.prototype.contains=function(a,c){var d,e;return d=!1,a?(a instanceof b?d=this._containsRange(a.getStart(),a.getEnd()):this.isIp(a)?d=c?this._containsRange(a,c):this._contains(a):this.isShortRange(a)?(e=this.parseShortRange(a),d=this._containsRange(e.start,e.end)):this.isLongRange(a)?(e=this.parseLongRange(a),d=this._containsRange(e.start,e.end)):this.isCidr(a)&&(d=this.contains(new b(a))),d):void 0},b.prototype.createIterator=function(c,d){if(this._calculateStart(),this._calculateEnd(),c=c||b.prototype.ipIntegerToString(this._start),d=d||b.prototype.ipIntegerToString(this._end),!this.contains(c))throw new RangeError("Network does not contain start IP address.");if(!this.contains(d))throw new RangeError("Network does not contain end IP address.");return new a(c,d)},b.prototype.getBitmask=function(){return this._calculateBitmask(),this._bitmask},b.prototype.getBroadcast=function(){return this._calculateBroadcast(),this.ipIntegerToString(this._broadcast)},b.prototype.getEnd=function(){return this._calculateEnd(),this.ipIntegerToString(this._end)},b.prototype.getNetwork=function(){return this._calculateNetwork(),this.ipIntegerToString(this._network)},b.prototype.getRange=function(){return this._calculateStart(),this._calculateEnd(),this.createIterator().toArray()},b.prototype.getStart=function(){return this._calculateStart(),this.ipIntegerToString(this._start)},b.prototype.getSubmask=function(){return this.ipIntegerToString(this._submask)},b.prototype.serialize=function(){return{network:this.getNetwork(),submask:this.getSubmask(),broadcast:this.getBroadcast(),start:this.getStart(),end:this.getEnd()}},b.prototype.toCidr=function(){return this.getNetwork()+"/"+this.getBitmask()},b.prototype.toString=function(){return JSON.stringify(this.serialize())},b});
//# sourceMappingURL=network-range.min.js.map